- hosts: 
  - nifiservers
  become: yes


  roles:
    - cavemandaveman.nifi
  pre_tasks:
#    - name: get vars
#      include_vars: keys.yml
    - name: include our custom nifi role
      include_role:
        name: nifi
    - name: bring the tls
      include_role:
        name: nifi
        tasks_from: tls
  vars:
    nifi_properties:
      nifi.web.https.host: "{{ ansible_fqdn }}"
      nifi.web.https.port: "9443"
      nifi.web.http.host: ""
      nifi.web.http.port: ""
      nifi.remote.input.http.enabled: false 
      nifi.security.keystore: "{{ nifi_config_dirs.external_config }}/keystore.jks"
      nifi.security.keystoreType: JKS
      nifi.security.keystorePasswd: "{{ keystorePasswd }}"
      nifi.security.keyPasswd: "{{ keyPasswd }}"
      nifi.security.truststore: "{{ nifi_config_dirs.external_config }}/truststore.jks"
      nifi.security.truststoreType: JKS
      nifi.security.truststorePasswd: "{{ truststorePasswd }}"
      nifi.cluster.protocol.is.secure: true

      nifi.cluster.is.node: true
      nifi.zookeeper.connect.string: "localhost:2181"

      nifi.cluster.node.address: "{{ ansible_fqdn }}"
      nifi.cluster.node.protocol.port: 11443
      nifi.cluster.flow.election.max.candidates: 3
      nifi.cluster.load.balance.host: "{{ ansible_fqdn }}"
      nifi.cluster.load.balance.port: 6342
      nifi.state.management.embedded.zookeeper.start: true
      nifi.zookeeper.connect.string: nifi1.test.local:2181,nifi2.test.local:2181,nifi3.test.local:2181
    authorizers:
      /authorizers/userGroupProvider/identifier: "file-user-group-provider"
#      /authorizers/userGroupProvider/identifier: "composite-configurable-user-group-provider"
#      /authorizers/userGroupProvider/property[@name="Configurable User Group Provider"]: file-user-group-provider 
#      /authorizers/userGroupProvider/property[@name="User Group Provider 1"]: ldap-user-group-provider 
      /authorizers/userGroupProvider/property[@name="Initial User Identity 1"]: CN=nifitest, OU=ApacheNiFi
      /authorizers/userGroupProvider/property[@name="Initial User Identity 2"]: CN=nifi1.test.local, OU=NIFI 
      /authorizers/userGroupProvider/property[@name="Initial User Identity 3"]: CN=nifi2.test.local, OU=NIFI 
      /authorizers/userGroupProvider/property[@name="Initial User Identity 4"]: CN=nifi3.test.local, OU=NIFI 
#      /authorizers/accessPolicyProvider/property[@name="User Group Provider"]: composite-configurable-user-group-provider
      /authorizers/accessPolicyProvider/property[@name="User Group Provider"]: file-user-group-provider
      /authorizers/accessPolicyProvider/property[@name="Initial Admin Identity"]: CN=nifitest, OU=ApacheNiFi
      /authorizers/accessPolicyProvider/property[@name="Node Identity 1"]: CN=nifi1.test.local, OU=NIFI 
      /authorizers/accessPolicyProvider/property[@name="Node Identity 2"]: CN=nifi2.test.local, OU=NIFI 
      /authorizers/accessPolicyProvider/property[@name="Node Identity 3"]: CN=nifi3.test.local, OU=NIFI 
      
    state_management:
      /stateManagement/cluster-provider/property[@name="Connect String"]: "{{ nifi_properties['nifi.zookeeper.connect.string'] }}"
    zookeeper_myid: "{{ ansible_default_ipv4.address.split('.')[-1] }}"
    zookeeper:
      dataDir: "{{ nifi_config_dirs.external_config }}/state/zookeeper"
      server.35: nifi1.test.local:2888:3888
      server.92: nifi2.test.local:2888:3888
      server.2: nifi3.test.local:2888:3888

  tasks:
    - name: bring the flow.gz
      include_role:
        name: nifi
        tasks_from: uuid
      run_once: true
    - name: Create zookeeper dir
      file:
        name: /opt/nifi/config_resources/state/zookeeper/version-2
        owner: nifi
        group: nifi
        state: directory
    - name: open the nifi zookeeper port
      firewalld:
        port: "2181/tcp"
        permanent: true
        state: enabled
        immediate: true
    - name: open the nifi node load balance port
      firewalld:
        port: "6342/tcp"
        permanent: true
        state: enabled
        immediate: true
    - name: open the nifi node cluster port
      firewalld:
        port: "11443/tcp"
        permanent: true
        state: enabled
        immediate: true
    - name: open the nifi zookeeper port1
      firewalld:
        port: "2888/tcp"
        permanent: true
        state: enabled
        immediate: true
    - name: open the nifi zookeeper port2
      firewalld:
        port: "3888/tcp"
        permanent: true
        state: enabled
        immediate: true
    - name: (re)start nifi
      service: 
        name: nifi
        enabled: true
        state: started
        

